#include <iostream>
#include <bits/stdc++.h>

using namespace std;

class Node
{
public:
    int data;
    Node *next;
    Node *back;

    Node(int data1, Node *next1, Node *back1)
    {
        this->data = data1;
        this->next = next1;
        this->back = back1;
    }
    Node(int data1)
    {
        this->data = data1;
        this->next = nullptr;
        this->back = nullptr;
    }
};
void print(Node *head)
{
    while (head != nullptr)
    {
        cout << head->data << " ";
        head = head->next;
    }
}

Node *DLL(vector<int> a)
{
    int n = a.size();
    Node *head = new Node(a[0]);
    Node *prev = head;
    for (int i = 1; i < n; i++)
    {
        Node *temp = new Node(a[i], nullptr, prev);
        prev->next = temp;
        prev = temp;
    }
    return head;
}

Node* reverse(Node* head){
    if (head == NULL || head->next== NULL) return head;
    
    Node* TEMP=NULL;
    Node* curr=head;

    while(curr != NULL){
        TEMP=curr->back;
        curr->back=curr->next;
        curr->next=TEMP;
        curr=curr->back;
    }
return TEMP->back;
}


int main()
{
    vector<int> arr = {12, 5, 8, 7, 4};
    Node *head = DLL(arr);
    cout << "Doubly Linked List: " << endl;
    print(head);
    cout << "\n"<<"Doubly Linked List after reverse " << endl;
    head = reverse(head);
    print(head);    
    return 0;
}
