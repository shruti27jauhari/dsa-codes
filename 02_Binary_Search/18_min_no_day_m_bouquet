class Solution {
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        if(static_cast<long long>(m) * k > n) return -1;
         int mini=*min_element(bloomDay.begin(),bloomDay.end());
         int maxi=*max_element(bloomDay.begin(),bloomDay.end());
        int low=mini,high=maxi;
        while(low<=high){
            int mid=(low+high)/2;
            if(possible(mid,n,bloomDay,k,m)){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }
    bool possible(int days,int n,vector<int>& bloomDay,int k,int m){
        int dof=0,count=0;
        for(int i=0;i<n;i++){
            
            if(bloomDay[i]<=days){
                count+=1;
            }else{
                dof+=count/k;
                count=0;
            }
        }
        dof+=count/k;
        return dof>=m;
    }
};
