class Solution {
public:
int hrss(vector<int>& piles,int mid ){
    int n=piles.size(), hr=0;
    for(int i=0;i<n;i++){
       hr += ceil((double)piles[i] / mid);

    }
    return hr;
};
    int minEatingSpeed(vector<int>& piles, int h) {
        int n=piles.size();
       int low = 1, high = *max_element(piles.begin(), piles.end());
        while(low<=high){
            int mid=(low+high)/2;
            int hrs= hrss(piles,mid );
            if(hrs<=h){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
